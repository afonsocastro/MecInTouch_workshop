<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from /home/afonsocastro/catkin_ws/src/MecInTouch_workshop/ur_description/urdf/ur10e.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot xmlns:xacro="http://wiki.ros.org/xacro" name="ur10e_robot">
    <!--
    Base UR robot series xacro macro.

    NOTE: this is NOT a URDF. It cannot directly be loaded by consumers
    expecting a flattened '.urdf' file. See the top-level '.xacro' for that
    (but note: that .xacro must still be processed by the xacro command).

    For use in '.launch' files: use one of the 'load_urX.launch' convenience
    launch files.

    This file models the base kinematic chain of a UR robot, which then gets
    parameterised by various configuration files to convert it into a UR3(e),
    UR5(e), UR10(e), UR16e, UR20 or UR30.

    NOTE: the default kinematic parameters (ie: link lengths, frame locations,
    offets, etc) do not correspond to any particular robot. They are defaults
    only. There WILL be non-zero offsets between the Forward Kinematics results
    in TF (ie: robot_state_publisher) and the values reported by the Teach
    Pendant.

    For accurate (and robot-specific) transforms, the 'kinematics_parameters_file'
    parameter MUST point to a .yaml file containing the appropriate values for
    the targetted robot.

    If using the UniversalRobots/Universal_Robots_ROS_Driver, follow the steps
    described in the readme of that repository to extract the kinematic
    calibration from the controller and generate the required .yaml file.

    Main author of the migration to yaml configs: Ludovic Delval.

    Contributors to previous versions (in no particular order):

     - Felix Messmer
     - Kelsey Hawkins
     - Wim Meeussen
     - Shaun Edwards
     - Nadia Hammoudeh Garcia
     - Dave Hershberger
     - G. vd. Hoorn
     - Philip Long
     - Dave Coleman
     - Miguel Prada
     - Mathias Luedtke
     - Marcel Schnirring
     - Felix von Drigalski
     - Felix Exner
     - Jimmy Da Silva
     - Ajit Krisshna N L
     - Muhammad Asif Rana
  -->
    <!--
    NOTE: the macro defined in this file is NOT part of the public API of this
          package. Users CANNOT rely on this file being available, or stored in
          this location. Nor can they rely on the existence of the macro.
  -->

    <xacro:property name="M_PI" value="3.1415926535897931"/>
            <!-- Tables properties-->
    <xacro:property name="table_height" value="0.795"/>
    <xacro:property name="table_width" value=".9"/>
    <xacro:property name="table_length" value="1.25"/>
    <xacro:property name="table_tabletop_thickness" value="0.015"/>
    <xacro:property name="table_leg_radius" value="0.02"/>

    <!-- Gantry properties-->
    <xacro:property name="gantry_height" value="2.29"/>
    <xacro:property name="gantry_foot_height" value="0.065"/>
    <xacro:property name="gantry_width" value="4"/>
    <xacro:property name="gantry_length" value="2.7975"/>
    <xacro:property name="gantry_thickness" value="0"/>
    <xacro:property name="gantry_leg_radius" value="0.09"/>

    <xacro:include filename="$(find ur_description)/urdf/table.macro.xacro"/>
    <xacro:include filename="$(find ur_description)/urdf/gantry.macro.xacro"/>
    <xacro:include filename="$(find ur_description)/urdf/astra.urdf.xacro"/>
    <xacro:include filename="$(find robotiq_2f_140_gripper_visualization)/urdf/robotiq_arg2f_140_model.xacro" />
    <xacro:include filename="$(find ur_description)/urdf/wood_block.macro.xacro"/>



    <transmission name="shoulder_pan_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="shoulder_pan_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="shoulder_pan_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="shoulder_lift_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="shoulder_lift_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="shoulder_lift_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="elbow_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="elbow_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="elbow_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_1_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_1_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_1_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_2_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_2_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_2_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <transmission name="wrist_3_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <joint name="wrist_3_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </joint>
        <actuator name="wrist_3_motor">
            <mechanicalReduction>1</mechanicalReduction>
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
        </actuator>
    </transmission>
    <!-- links: main serial chain -->
    <link name="base_link" />
    <link name="base_link_inertia">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/visual/base.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/collision/base.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="4.0" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.0061063308908" ixy="0.0" ixz="0.0" iyy="0.0061063308908" iyz="0.0" izz="0.01125" />
        </inertial>
    </link>

    <link name="world"/>

    <joint name="world_to_robot_joint" type="fixed">
        <parent link="tabletop_table_base"/>
        <child link="base_link"/>
        <origin xyz="0 0 -0.015" rpy="0 0 0"/>
    </joint>

    <xacro:table_macro name="table_base" parent="world" width="${table_width}"
                       length="${table_length}" height="${table_height}"
                       tabletop_thickness="${table_tabletop_thickness}" leg_radius="${table_leg_radius}">
        <origin xyz="0.1 ${gantry_length/2-table_width/2} 0" rpy="0 0 ${-M_PI/2}"/>
    </xacro:table_macro>

    <xacro:gantry_macro name="gantry" parent="world" width="${gantry_width}"
                        length="${gantry_length}" height="${gantry_height}" foot_height="${gantry_foot_height}"
                        gantry_thickness="${gantry_thickness}" leg_radius="${gantry_leg_radius}">
        <origin xyz="0 0 0" rpy="0 0 0"/>
    </xacro:gantry_macro>


    <xacro:sensor_astra prefix="camera_top" parent="world">
        <origin xyz="0.09511408182797733 0.14905972847160784 2.4330682231422602"
                rpy="-1.9962039976135075 1.491251777066553 -2.0400319820116386"/>
    </xacro:sensor_astra>

    <xacro:sensor_astra prefix="camera_right" parent="world">
        <origin xyz="-0.47389933117248495 0.6050706033175103 1.2510900165155419"
                rpy="0.1688160669718149 0.3885697035429511 -0.6796268633018927"/>
    </xacro:sensor_astra>

<!--    <joint name="fixed" type="fixed">-->
<!--        <parent link="world"/>-->
<!--        <child link="base_link"/>-->
<!--    </joint>-->

    <link name="shoulder_link">
        <visual>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/visual/shoulder.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/collision/shoulder.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="7.778" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.03147431257693659" ixy="0.0" ixz="0.0" iyy="0.03147431257693659" iyz="0.0" izz="0.021875624999999996" />
        </inertial>
    </link>
    <link name="upper_arm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.1762" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/visual/upperarm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.1762" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/collision/upperarm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="12.93" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.306 0.0 0.175" />
            <inertia ixx="0.42175380379841093" ixy="0.0" ixz="0.0" iyy="0.42175380379841093" iyz="0.0" izz="0.03636562499999999" />
        </inertial>
    </link>
    <link name="forearm_link">
        <visual>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0393" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/visual/forearm.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0.0393" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/collision/forearm.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="3.87" />
            <origin rpy="0 1.5707963267948966 0" xyz="-0.285775 0.0 0.0393" />
            <inertia ixx="0.11079302548902206" ixy="0.0" ixz="0.0" iyy="0.11079302548902206" iyz="0.0" izz="0.010884375" />
        </inertial>
    </link>
    <link name="wrist_1_link">
        <visual>
            <!-- TODO: Move this to a parameter -->
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.135" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/visual/wrist1.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.135" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/collision/wrist1.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.96" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.005108247956699999" ixy="0.0" ixz="0.0" iyy="0.005108247956699999" iyz="0.0" izz="0.005512499999999999" />
        </inertial>
    </link>
    <link name="wrist_2_link">
        <visual>
            <origin rpy="0 0 0" xyz="0 0 -0.12" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/visual/wrist2.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 -0.12" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/collision/wrist2.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="1.96" />
            <origin rpy="0 0 0" xyz="0 0 0" />
            <inertia ixx="0.005108247956699999" ixy="0.0" ixz="0.0" iyy="0.005108247956699999" iyz="0.0" izz="0.005512499999999999" />
        </inertial>
    </link>
    <link name="wrist_3_link">
        <visual>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1168" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/visual/wrist3.dae" />
            </geometry>
            <material name="LightGrey">
                <color rgba="0.7 0.7 0.7 1.0" />
            </material>
        </visual>
        <collision>
            <origin rpy="1.5707963267948966 0 0" xyz="0 0 -0.1168" />
            <geometry>
                <mesh filename="package://ur_description/meshes/ur10e/collision/wrist3.stl" />
            </geometry>
        </collision>
        <inertial>
            <mass value="0.202" />
            <origin rpy="0 0 0" xyz="0.0 0.0 -0.025" />
            <inertia ixx="0.00014434577559500002" ixy="0.0" ixz="0.0" iyy="0.00014434577559500002" iyz="0.0" izz="0.00020452500000000002" />
        </inertial>
    </link>
    <!-- joints: main serial chain -->
    <joint name="base_link-base_link_inertia" type="fixed">
        <parent link="base_link" />
        <child link="base_link_inertia" />
        <!-- 'base_link' is REP-103 aligned (so X+ forward), while the internal
           frames of the robot/controller have X+ pointing backwards.
           Use the joint between 'base_link' and 'base_link_inertia' (a dummy
           link/frame) to introduce the necessary rotation over Z (of pi rad).
      -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
    </joint>
    <joint name="shoulder_pan_joint" type="revolute">
        <parent link="base_link_inertia" />
        <child link="shoulder_link" />
        <origin rpy="0 0 0" xyz="0 0 0.1807" />
        <axis xyz="0 0 1" />
        <limit effort="330.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="2.0943951023931953" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="shoulder_lift_joint" type="revolute">
        <parent link="shoulder_link" />
        <child link="upper_arm_link" />
        <origin rpy="1.570796327 0 0" xyz="0 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="330.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="2.0943951023931953" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="elbow_joint" type="revolute">
        <parent link="upper_arm_link" />
        <child link="forearm_link" />
        <origin rpy="0 0 0" xyz="-0.6127 0 0" />
        <axis xyz="0 0 1" />
        <limit effort="150.0" lower="-3.141592653589793" upper="3.141592653589793" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_1_joint" type="revolute">
        <parent link="forearm_link" />
        <child link="wrist_1_link" />
        <origin rpy="0 0 0" xyz="-0.57155 0 0.17415" />
        <axis xyz="0 0 1" />
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_2_joint" type="revolute">
        <parent link="wrist_1_link" />
        <child link="wrist_2_link" />
        <origin rpy="1.570796327 0 0" xyz="0 -0.11985 -2.458164590756244e-11" />
        <axis xyz="0 0 1" />
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <joint name="wrist_3_joint" type="revolute">
        <parent link="wrist_2_link" />
        <child link="wrist_3_link" />
        <origin rpy="1.570796326589793 3.141592653589793 3.141592653589793" xyz="0 0.11655 -2.390480459346185e-11" />
        <axis xyz="0 0 1" />
        <limit effort="56.0" lower="-6.283185307179586" upper="6.283185307179586" velocity="3.141592653589793" />
        <dynamics damping="0" friction="0" />
    </joint>
    <!-- ROS-Industrial 'base' frame: base_link to UR 'Base' Coordinates transform -->
    <link name="base" />
    <joint name="base_link-base_fixed_joint" type="fixed">
        <!-- Note the rotation over Z of pi radians: as base_link is REP-103
           aligned (ie: has X+ forward, Y+ left and Z+ up), this is needed
           to correctly align 'base' with the 'Base' coordinate system of
           the UR controller.
      -->
        <origin rpy="0 0 3.141592653589793" xyz="0 0 0" />
        <parent link="base_link" />
        <child link="base" />
    </joint>
    <!-- ROS-Industrial 'flange' frame: attachment point for EEF models -->
    <link name="flange" />
    <joint name="wrist_3-flange" type="fixed">
        <parent link="wrist_3_link" />
        <child link="flange" />
        <origin rpy="0 -1.5707963267948966 -1.5707963267948966" xyz="0 0 0" />
    </joint>
    <!-- ROS-Industrial 'tool0' frame: all-zeros tool frame -->
    <link name="tool0" />
    <joint name="flange-tool0" type="fixed">
        <!-- default toolframe: X+ left, Y+ up, Z+ front -->
        <origin rpy="1.5707963267948966 0 1.5707963267948966" xyz="0 0 0" />
        <parent link="flange" />
        <child link="tool0" />
    </joint>
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/</robotNamespace>
        </plugin>
    </gazebo>

    <xacro:wood_block_macro parent="world">
        <origin xyz="0 0 0.835" rpy="0 0 ${M_PI}"/>
    </xacro:wood_block_macro>



    <joint name="tool0-FT_sensor_base" type="fixed">
        <parent link="tool0"/>
        <child link="FT_sensor_base"/>
        <origin xyz="0 0 0.007" rpy="0 0 ${M_PI/2}"/>
    </joint>


    <link name="FT_sensor_base">
        <visual>
          <geometry>
            <cylinder length="0.014" radius="0.05"/>
          </geometry>
          <material name="metalic_blue">
            <color rgba="0.0118 0.5176 0.6706 1.0"/>
          </material>
        </visual>
        <collision>
          <geometry>
            <cylinder length="0.014" radius="0.05"/>
          </geometry>
        </collision>
    </link>


    <joint name="FT_sensor_base-FT_sensor" type="fixed">
        <parent link="FT_sensor_base"/>
        <child link="FT_sensor"/>
        <origin xyz="0 0 0.0215" rpy="0 0 0"/>
    </joint>

    <link name="FT_sensor">
        <visual>
          <geometry>
            <cylinder length="0.029" radius="0.04"/>
          </geometry>
          <material name="metalic_blue">
            <color rgba="0.0118 0.5176 0.6706 1.0"/>
          </material>
          <gazebo>
            <material>Gazebo/Blue</material>
          </gazebo>
        </visual>
        <collision>
          <geometry>
            <cylinder length="0.029" radius="0.04"/>
          </geometry>
        </collision>
    </link>


    <joint name="gripper_joint" type="fixed">
        <parent link="FT_sensor"/>
        <child link="robotiq_arg2f_base_link"/>
        <origin xyz="0 0 0.0215" rpy="0 0 0"/>
    </joint>

    <xacro:table_macro name="table_front" parent="table_base" width="0.7"
                       length="1.20" height="0.75"
                       tabletop_thickness="0.015" leg_radius="0.02">
        <origin xyz="${(0.9+0.7)/2} 0 0" rpy="0 0 0"/>
    </xacro:table_macro>

<!--    <link name="table_beam">-->
<!--        <visual>-->
<!--            <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />-->
<!--            <geometry>-->
<!--                <mesh filename="package://ur_description/meshes/bosch_40x40x150.STL" scale="0.001 0.01 0.001" />-->
<!--            </geometry>-->
<!--            <material name="grey">-->
<!--                <color rgba="0.678 0.678 0.678 1.0"/>-->
<!--            </material>-->
<!--&lt;!&ndash;            <material name="grey"/>&ndash;&gt;-->
<!--        </visual>-->
<!--        <collision>-->
<!--            <origin xyz="0.02 0.75 0.02" rpy="${M_PI/2} 0 0" />-->
<!--            <geometry>-->
<!--                <box size="0.05 0.05 1.55"/>-->
<!--            </geometry>-->
<!--        </collision>-->
<!--        <inertial>-->
<!--            <mass value="1.0" />-->
<!--            <origin xyz="0.0 0.0 ${0.75/2-40-0.001}" rpy="0 0 0" />-->
<!--            <inertia ixx="0.1" ixy="0"  ixz="0"-->
<!--                     iyy="0.1" iyz="0"-->
<!--                     izz="0.01" />-->
<!--        </inertial>-->
<!--    </link>-->

<!--    <joint name="table_base_to_table_beam" type="fixed">-->
<!--        <parent link="table_base" />-->
<!--        <child link="table_beam" />-->
<!--        <origin xyz="0.308 -0.625 0.0035" rpy="${M_PI/2} 0 0"/>-->
<!--    </joint>-->


</robot>
